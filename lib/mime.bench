# -*- tcl -*-
# Tcl Benchmark File
#
# This file contains a number of benchmarks for the 'mime' module.
# This allow developers to monitor/gauge/track package performance.
#
# (c) 2006 Andreas Kupries <andreas_kupries@users.sourceforge.net>

# See the file "license.terms" for information on usage and redistribution
# of this file, and for a DISCLAIMER OF ALL WARRANTIES.

# This program is free software: you can redistribute it and/or modify it under
# the terms of the GNU Affero General Public License as published by the Free
# Software Foundation, either version 3 of the License, or (at your option) any
# later version.
#
# This program is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE. See the GNU General Public License for more
# details.
#
# A copy of the GNU Affero General Public License is available in the "LICENSE"
# file, and at <https://www.gnu.org/licenses/agpl-3.0.en.html>. 


# We need at least version 8.5 for the package and thus the
# benchmarks.

if {![package vsatisfies [package provide Tcl] 8.5 9]} {
    return
}

# ### ### ### ######### ######### ######### ###########################
## Setting up the environment ...

package forget mime
catch {namespace delete ::mime}
source [file join [file dirname [info script]] mime.tcl]

proc construct_item_with_attachment size {
    set message_token [mime::initialize -canonical text/plain \
            -string "This is a first part."]
    set attachment_body [string repeat abcd\n [expr {$size / 5}]]
    set attachment_token [mime::initialize \
            -canonical application/octet-stream \
            -string $attachment_body]
    set multi_token [mime::initialize -canonical multipart/mixed \
            -parts [list $message_token $attachment_token]]

    set packaged [mime::buildmessage $multi_token]
    mime::finalize $multi_token
    return $packaged
}

# ### ### ### ######### ######### ######### ###########################
## Benchmarks.

foreach sz {
    1000
    10000
    50000
    100000
    200000
    400000
    800000
    1000000
    1500000
    2500000
    5000000
} {
    bench -desc "MIME initialize/finalize $sz" -pre {
	set item [construct_item_with_attachment $sz]
    } -body {
	mime::finalize [mime::initialize -string $item]
    } -iter 1
}
